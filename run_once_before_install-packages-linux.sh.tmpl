{{ if (eq .chezmoi.os "linux") -}}
#!/bin/bash
set -eu

RPMS=(
  "https://github.com/TheAssassin/AppImageLauncher/releases/download/v2.2.0/appimagelauncher-2.2.0-travis995.0f91801.x86_64.rpm"
  "https://dl.smallstep.com/cli/docs-ca-install/latest/step-cli_amd64.rpm"
  # "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm"
  # "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm"
  # "https://github.com/rpmsphere/noarch/raw/master/r/rpmsphere-release-38-1.noarch.rpm"
)

NERD_FONT_VERSION=3.2.1

NERD_FONT_FAMILIES=(
  "FiraCode"
  "FiraMono"
  "Hack"
  "Hasklig"
  "JetBrainsMono"
  "Monoid"
  "RobotoMono"
  "SpaceMono"
)
NERD_FONT_URL="https://github.com/ryanoasis/nerd-fonts/releases/download/"

USER_FONT_DIR="$HOME/.local/share/fonts"

TMP_DIR=$(mktemp -d)
trap 'rm -rf $TMP_DIR' EXIT

install_flatpaks() {
  echo "Installing flatpaks"
  flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

  local flatpaks=(
{{ joinPath .chezmoi.sourceDir "Pakfile" | include }}
{{ joinPath .chezmoi.sourceDir "Pakfile.pers.asc" | include | decrypt }}
  )

  flatpak install -y flathub "${flatpaks[@]}"
}

remove_flatpaks() {
  echo "Removing flatpaks"
  local flatpaks=(
    org.kde.okular
    org.kde.kmahjongg
    org.kde.kmines
    org.kde.kolourpaint
    org.kde.krdc
  )

  local flatpaks_list="$(flatpak list --columns=application)"
  for flatpak in "${flatpaks[@]}"; do
    if echo "$flatpaks_list" | grep -q "$flatpak"; then
      flatpak uninstall --delete-data -y "${flatpaks[@]}"
      break
    fi
  done 
}

install_ostree() {
  echo "Installing ostree packages"
  local rpmfile=(
    {{ joinPath .chezmoi.sourceDir "Rpmfile.pers.asc" | include | decrypt -}}
    {{- joinPath .chezmoi.sourceDir "Rpmfile" | include -}}
  )
  # setting up non-rh repos
  for repo in $(ls {{ .chezmoi.sourceDir }}/yum.repos.d); do
    sudo cp "{{ .chezmoi.sourceDir }}/yum.repos.d/$repo" /etc/yum.repos.d/
  done

  # https://code.visualstudio.com/docs/setup/linux#_rhel-fedora-and-centos-based-distributions
  if [ ! -f /etc/pki/rpm-gpg/microsoft.asc ]; then
    curl -o /etc/pki/rpm-gpg/microsoft.asc https://packages.microsoft.com/keys/microsoft.asc
  fi

  # TODO: check if packages are already installed
  if rpm-ostree status -bq; then
    mkdir -p $HOME/.cache/chezmoi/rpms
    # download from RPMS to cache folder if not exists
    for rpm in "${RPMS[@]}"; do
      if [ ! -f $HOME/.cache/chezmoi/rpms/$(basename $rpm) ]; then
        curl -L $rpm -o $HOME/.cache/chezmoi/rpms/$(basename $rpm)
      fi
    done

    # assemble all rpms plus the downloaded ones
    rpms_files="${rpmfile[@]}"
    for rpm in "${RPMS[@]}"; do
      rpms_files="$rpms_files $HOME/.cache/chezmoi/rpms/$(basename $rpm)"
    done
    echo "Installing ostree packages: $rpms_files"

    rpm-ostree install --allow-inactive --idempotent -y $rpms_files
  fi

  if command -v kdeconnect-cli &> /dev/null; then
    echo "Removing kde-connect packages"
    rpm-ostree override remove \
      kde-connect \
      kde-connect-libs \
      kdeconnectd
  fi

  echo "Applying ostree changes (best effort)"
  sudo rpm-ostree apply-live || true
}

setup_toolbx() {
  echo "Setting up toolbox"
  if ! toolbox list -c | grep -q "ubuntu-toolbox-23.10"; then
    toolbox create --distro ubuntu --release 23.10
  fi
  if ! toolbox list -c | grep -q "fedora-toolbox-40"; then
    toolbox create --distro fedora --release 40
  fi
}

install_nerd_fonts() {
  echo "Installing Nerd Fonts"
  local nerd_fonts_dir="$USER_FONT_DIR/NerdFonts"
  mkdir -p $nerd_fonts_dir
  echo "Installing Nerd Fonts: ${NERD_FONT_FAMILIES[@]}"
  for family in "${NERD_FONT_FAMILIES[@]}"; do
    if [ -f $nerd_fonts_dir/$family ]; then
      echo "Nerd Font $family already exists, skipping"
      continue
    fi
    curl -L -o $TMP_DIR/$family.tar.xz $NERD_FONT_URL/v$NERD_FONT_VERSION/$family.tar.xz
    mkdir -p $nerd_fonts_dir/$family
    tar -xvf $TMP_DIR/$family.tar.xz -C $nerd_fonts_dir/$family
  done
}

install_fonts() {
  install_nerd_fonts
  echo "Updating fonts cache"
  fc-cache -v $HOME/.local/share/fonts || true
}

install_ca() {
  echo "Installing CA certificates"
  # if home/.step exists, skip
  if [ -d $HOME/.step ]; then
    echo ".step exists, skipping CA bootstrap"
    return
  fi

  step ca bootstrap --ca-url {{ .caUrl }} --fingerprint {{ .caUrlFingerprint }} --install
}

{{ if (eq .chezmoi.osRelease.variantID "kinoite") -}}
echo "Installing Kinoite environment"
install_ostree
remove_flatpaks
install_flatpaks
setup_toolbx
install_ca
install_fonts

if [ ! -f ~/bin/git-credential-github ]; then
  echo "Downloading git-credential-github"
  # Download and extract git-credential-github
  mkdir -p /tmp/git-credential-github
  curl -L https://github.com/Xgames123/git-credential-github/releases/download/2.2.0/git-credential-github-2.2.0.deb -o /tmp/git-credential-github/git-credential-github-2.2.0.deb
  ar x /tmp/git-credential-github/git-credential-github-2.2.0.deb --output /tmp/git-credential-github
  tar -xf /tmp/git-credential-github/data.tar.xz -C /tmp/git-credential-github
  cp /tmp/git-credential-github/usr/bin/git-credential-github ~/bin/
fi

if ! command -v topgrade &> /dev/null; then
  echo "Downloading topgrade"
  mkdir -p /tmp/topgrade
  curl -L https://github.com/topgrade-rs/topgrade/releases/download/v14.0.1/topgrade-v14.0.1-x86_64-unknown-linux-musl.tar.gz -o /tmp/topgrade/topgrade.tar.gz
  tar -xf /tmp/topgrade/topgrade.tar.gz -C /tmp/topgrade
  cp /tmp/topgrade/topgrade ~/bin/
fi

{{ end -}}

{{ end -}}
